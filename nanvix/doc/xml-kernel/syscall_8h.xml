<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="syscall_8h" kind="file" language="C++">
    <compoundname>syscall.h</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="syscall_8h_1a6ae6084b05d5e662c40c5e84dd42a8f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN unsigned</type>
        <definition>EXTERN unsigned sys_alarm</definition>
        <argsstring>(unsigned seconds)</argsstring>
        <name>sys_alarm</name>
        <param>
          <type>unsigned</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="92" column="1" bodyfile="src/kernel/sys/alarm.c" bodystart="27" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a9505c0575e79a4e4e1497a27a12b7d41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_brk</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>sys_brk</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="93" column="1" bodyfile="src/kernel/sys/brk.c" bodystart="28" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a999fcc8c37a2dbd53ad41f25e2c014d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN void</type>
        <definition>EXTERN void sys__exit</definition>
        <argsstring>(int status)</argsstring>
        <name>sys__exit</name>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="94" column="1" bodyfile="src/kernel/sys/_exit.c" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1af2ff9a8afc5747c87144ee1dde66274b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN pid_t</type>
        <definition>EXTERN pid_t sys_fork</definition>
        <argsstring>(void)</argsstring>
        <name>sys_fork</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="95" column="1" bodyfile="src/kernel/sys/fork.c" bodystart="32" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a8374eb72183dda6f53f51398a7ce51b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN pid_t</type>
        <definition>EXTERN pid_t sys_getpgrp</definition>
        <argsstring>(void)</argsstring>
        <name>sys_getpgrp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="96" column="1" bodyfile="src/kernel/sys/getpgrp.c" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1ac60118fdee3bfd60def753552654ba84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN pid_t</type>
        <definition>EXTERN pid_t sys_getpid</definition>
        <argsstring>(void)</argsstring>
        <name>sys_getpid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="97" column="1" bodyfile="src/kernel/sys/getpid.c" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a0c9b9898c77d6ae9fc92ed6d1259a797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN pid_t</type>
        <definition>EXTERN pid_t sys_getppid</definition>
        <argsstring>(void)</argsstring>
        <name>sys_getppid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="98" column="1" bodyfile="src/kernel/sys/getppid.c" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a11d427047cdc764fd54f0c7033949906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN pid_t</type>
        <definition>EXTERN pid_t sys_getuid</definition>
        <argsstring>(void)</argsstring>
        <name>sys_getuid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="99" column="1" bodyfile="src/kernel/sys/getuid.c" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a7b30b3e4d6d0a0afd04c4fb8168a6aee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_kill</definition>
        <argsstring>(pid_t pid, int sig)</argsstring>
        <name>sys_kill</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="100" column="1" bodyfile="src/kernel/sys/kill.c" bodystart="39" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a1df6abd6cc18c27cdf21acc5e3c68120" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_nice</definition>
        <argsstring>(int incr)</argsstring>
        <name>sys_nice</name>
        <param>
          <type>int</type>
          <declname>incr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="101" column="1" bodyfile="src/kernel/sys/nice.c" bodystart="28" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a8e3d2b23d2d99c84e4fefeb81ef629ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN void</type>
        <definition>EXTERN void sys_pause</definition>
        <argsstring>(void)</argsstring>
        <name>sys_pause</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="102" column="1" bodyfile="src/kernel/sys/pause.c" bodystart="31" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a9b81980612fcb7cc02f2c90a37a2faf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_seteuid</definition>
        <argsstring>(uid_t uid)</argsstring>
        <name>sys_seteuid</name>
        <param>
          <type>uid_t</type>
          <declname>uid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="103" column="1" bodyfile="src/kernel/sys/seteuid.c" bodystart="28" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1aed6c13a8ee496031968b0d6b0dbc8350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_setgid</definition>
        <argsstring>(gid_t uid)</argsstring>
        <name>sys_setgid</name>
        <param>
          <type>gid_t</type>
          <declname>uid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="104" column="1" bodyfile="src/kernel/sys/setgid.c" bodystart="28" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a0e6e37680c3c8235ac4470d333be0b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN sighandler_t</type>
        <definition>EXTERN sighandler_t sys_signal</definition>
        <argsstring>(int, sighandler_t, void(*)(void))</argsstring>
        <name>sys_signal</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>sighandler_t</type>
        </param>
        <param>
          <type>void(*)(void)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="105" column="1" bodyfile="src/kernel/sys/signal.c" bodystart="29" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a8c3307d7b20d30ec6e48dd27498576b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN pid_t</type>
        <definition>EXTERN pid_t sys_setpgrp</definition>
        <argsstring>(void)</argsstring>
        <name>sys_setpgrp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="106" column="1" bodyfile="src/kernel/sys/setpgrp.c" bodystart="28" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a06e293e3019b65300c7d8b22b5a16f00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_setuid</definition>
        <argsstring>(pid_t uid)</argsstring>
        <name>sys_setuid</name>
        <param>
          <type>pid_t</type>
          <declname>uid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="107" column="1" bodyfile="src/kernel/sys/setuid.c" bodystart="28" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a8d3f9df0eea9b8bdfc495b91c2ef6327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN pid_t</type>
        <definition>EXTERN pid_t sys_wait</definition>
        <argsstring>(int *stat_loc)</argsstring>
        <name>sys_wait</name>
        <param>
          <type>int *</type>
          <declname>stat_loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="108" column="1" bodyfile="src/kernel/sys/wait.c" bodystart="32" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1ab48d6794f11b891de4712822a2feb9b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_dup2</definition>
        <argsstring>(int oldfd, int newfd)</argsstring>
        <name>sys_dup2</name>
        <param>
          <type>int</type>
          <declname>oldfd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newfd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="113" column="1" bodyfile="src/kernel/sys/fcntl.c" bodystart="58" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1acf91ea3b4dd44a72eaa72b5a1a1541d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_ioctl</definition>
        <argsstring>(unsigned fd, unsigned cmd, unsigned arg)</argsstring>
        <name>sys_ioctl</name>
        <param>
          <type>unsigned</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="118" column="1" bodyfile="src/kernel/sys/ioctl.c" bodystart="31" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a70c5dba31d17f2c07c94ec5c437849a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_access</definition>
        <argsstring>(const char *path, int amode)</argsstring>
        <name>sys_access</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>amode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="123" column="1" bodyfile="src/kernel/sys/access.c" bodystart="29" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a386f6949bc6609388f77938b7f58416c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_chdir</definition>
        <argsstring>(const char *path)</argsstring>
        <name>sys_chdir</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="128" column="1" bodyfile="src/kernel/sys/chdir.c" bodystart="28" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a3d014d55f212601c8805643326fcdaeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_chmod</definition>
        <argsstring>(const char *path, mode_t mode)</argsstring>
        <name>sys_chmod</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="133" column="1" bodyfile="src/kernel/sys/chmod.c" bodystart="30" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a349b7769f5cfdb6165bc8b33950e1038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_chown</definition>
        <argsstring>(const char *path, uid_t owner, gid_t group)</argsstring>
        <name>sys_chown</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>uid_t</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>gid_t</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="138" column="1" bodyfile="src/kernel/sys/chown.c" bodystart="30" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a004e78c4b4725c188ba0557d1de54e5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_chroot</definition>
        <argsstring>(const char *path)</argsstring>
        <name>sys_chroot</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="143" column="1" bodyfile="src/kernel/sys/chroot.c" bodystart="28" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1ab64cc7d921ebe0e31e7e5ba760c282e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_close</definition>
        <argsstring>(int fd)</argsstring>
        <name>sys_close</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="148" column="1" bodyfile="src/kernel/sys/close.c" bodystart="28" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1aee840925037049aec93aca3f92e9ea11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_execve</definition>
        <argsstring>(const char *filename, const char **argv, const char **envp)</argsstring>
        <name>sys_execve</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>envp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="153" column="1" bodyfile="src/kernel/sys/execve.c" bodystart="334" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1ae1456005420c7dcc03f5ab1f273a56dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_fcntl</definition>
        <argsstring>(int fd, int cmd, int arg)</argsstring>
        <name>sys_fcntl</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="158" column="1" bodyfile="src/kernel/sys/fcntl.c" bodystart="71" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1adbbf0b0b0e8e6872f3119650f510ffed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN gid_t</type>
        <definition>EXTERN gid_t sys_getegid</definition>
        <argsstring>(void)</argsstring>
        <name>sys_getegid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="163" column="1" bodyfile="src/kernel/sys/getegid.c" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a7b9af0e81949457ed20821f3a64bde0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN uid_t</type>
        <definition>EXTERN uid_t sys_geteuid</definition>
        <argsstring>(void)</argsstring>
        <name>sys_geteuid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="168" column="1" bodyfile="src/kernel/sys/geteuid.c" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a18f24ea9dbcc33461bcbbf7eb9826d58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN gid_t</type>
        <definition>EXTERN gid_t sys_getgid</definition>
        <argsstring>(void)</argsstring>
        <name>sys_getgid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="173" column="1" bodyfile="src/kernel/sys/getgid.c" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1af8e6c964f3cac989f69b0d1d0ec6cb79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_link</definition>
        <argsstring>(const char *path1, const char *path2)</argsstring>
        <name>sys_link</name>
        <param>
          <type>const char *</type>
          <declname>path1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="178" column="1" bodyfile="src/kernel/sys/link.c" bodystart="88" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a4cd34d385f9acd870f848c4ca22b4b38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN off_t</type>
        <definition>EXTERN off_t sys_lseek</definition>
        <argsstring>(int fd, off_t offset, int whence)</argsstring>
        <name>sys_lseek</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>whence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="183" column="1" bodyfile="src/kernel/sys/lseek.c" bodystart="31" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1ac76e484761172d8e69fd60ecbadcfc61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_open</definition>
        <argsstring>(const char *path, int oflag, mode_t mode)</argsstring>
        <name>sys_open</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>oflag</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="188" column="1" bodyfile="src/kernel/sys/open.c" bodystart="194" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a44732faa6c7d915bcd5370a8c8289988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_pipe</definition>
        <argsstring>(int fildes[2])</argsstring>
        <name>sys_pipe</name>
        <param>
          <type>int</type>
          <declname>fildes</declname>
          <array>[2]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="193" column="1" bodyfile="src/kernel/sys/pipe.c" bodystart="29" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1ab77c75f2bc4677203989dcbb92051d72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN ssize_t</type>
        <definition>EXTERN ssize_t sys_read</definition>
        <argsstring>(int fd, void *buf, size_t n)</argsstring>
        <name>sys_read</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="decl_8h_1a028b7cbca0d37bbc9bc219370525227f" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="198" column="1" bodyfile="src/kernel/sys/read.c" bodystart="33" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1ae7bef7dcad73e3092331a7b3839d66f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_setegid</definition>
        <argsstring>(gid_t gid)</argsstring>
        <name>sys_setegid</name>
        <param>
          <type>gid_t</type>
          <declname>gid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="203" column="1" bodyfile="src/kernel/sys/setegid.c" bodystart="28" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1afb6a0f3ee8309ce2b540b5c42a744905" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_stat</definition>
        <argsstring>(const char *path, struct stat *buf)</argsstring>
        <name>sys_stat</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>struct stat *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="208" column="1" bodyfile="src/kernel/sys/stat.c" bodystart="29" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1afc09ab0aa3dd3a2ea5f3b083e6e6cc44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN void</type>
        <definition>EXTERN void sys_sync</definition>
        <argsstring>(void)</argsstring>
        <name>sys_sync</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="213" column="1" bodyfile="src/kernel/sys/sync.c" bodystart="26" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a23754fa9670dc383cbdcbcb01c1a7b1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN clock_t</type>
        <definition>EXTERN clock_t sys_times</definition>
        <argsstring>(struct tms *buffer)</argsstring>
        <name>sys_times</name>
        <param>
          <type>struct <ref refid="structtms" kindref="compound">tms</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Gets process and waited-for child process times. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Timing accounting information.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Upon successful completion, the elapsed real time, in clock ticks, since system start-up time is returned. Upon failure, a negative error code is returned instead. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="218" column="1" bodyfile="src/kernel/sys/times.c" bodystart="36" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1ab016177a3c8badf9853aba756f3c9b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN mode_t</type>
        <definition>EXTERN mode_t sys_umask</definition>
        <argsstring>(mode_t cmask)</argsstring>
        <name>sys_umask</name>
        <param>
          <type>mode_t</type>
          <declname>cmask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="223" column="1" bodyfile="src/kernel/sys/umask.c" bodystart="29" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a60f5a74f1c27b8d41132fa933d3b084e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_uname</definition>
        <argsstring>(struct utsname *name)</argsstring>
        <name>sys_uname</name>
        <param>
          <type>struct utsname *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="228" column="1" bodyfile="src/kernel/sys/uname.c" bodystart="42" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1ac39e003a169ae26547319feb04588f9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_unlink</definition>
        <argsstring>(const char *path)</argsstring>
        <name>sys_unlink</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="233" column="1" bodyfile="src/kernel/sys/unlink.c" bodystart="29" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1af4c963061b0cfe73c13afb05c4983f2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_ustat</definition>
        <argsstring>(dev_t dev, struct ustat *ubuf)</argsstring>
        <name>sys_ustat</name>
        <param>
          <type>dev_t</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>struct ustat *</type>
          <declname>ubuf</declname>
        </param>
        <briefdescription>
<para>Gets file system statistics. </para>        </briefdescription>
        <detaileddescription>
<para>Gets statistics about the file system that is mounted on the device dev, and stores information in the buffer pointed to by ubuf.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Device number where the file system is mounted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ubuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Location where file system information shall be dumped.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Upon successful completion, zero is returned. Upon failure, a negative error number is returned instead. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="238" column="1" bodyfile="src/kernel/sys/ustat.c" bodystart="38" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a4d7512e83cd933d4490c26eb70a735d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_utime</definition>
        <argsstring>(const char *path, struct utimbuf *times)</argsstring>
        <name>sys_utime</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>struct utimbuf *</type>
          <declname>times</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="243" column="1" bodyfile="src/kernel/sys/utime.c" bodystart="46" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a7abdf05974a526579a2a5b8446ee2e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN ssize_t</type>
        <definition>EXTERN ssize_t sys_write</definition>
        <argsstring>(int fd, const void *buf, size_t n)</argsstring>
        <name>sys_write</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="decl_8h_1a028b7cbca0d37bbc9bc219370525227f" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="248" column="1" bodyfile="src/kernel/sys/write.c" bodystart="33" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1aa92a161f4b732363b4c8d2999143c002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_shutdown</definition>
        <argsstring>(void)</argsstring>
        <name>sys_shutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Shutdowns the system. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="250" column="1" bodyfile="src/kernel/sys/shutdown.c" bodystart="32" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a50fa7b30cc8e1b676fc81191e0adbfee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_ps</definition>
        <argsstring>(void)</argsstring>
        <name>sys_ps</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="255" column="1" bodyfile="src/kernel/sys/ps.c" bodystart="74" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1a72f0595d92b8ea09f79fccca7829ff7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_clear</definition>
        <argsstring>(void)</argsstring>
        <name>sys_clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="syscall_8h_1ad17fa652bf4b3da70942973e3b32cb30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN int</type>
        <definition>EXTERN int sys_gticks</definition>
        <argsstring>(void)</argsstring>
        <name>sys_gticks</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nanvix/syscall.h" line="265" column="1" bodyfile="src/kernel/sys/gticks.c" bodystart="26" bodyend="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright(C)<sp/>2011-2016<sp/>Pedro<sp/>H.<sp/>Penna<sp/><sp/><sp/>&lt;pedrohenriquepenna@gmail.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2015-2016<sp/>Davidson<sp/>Francis<sp/>&lt;davidsondfgl@hotmail.com&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Nanvix.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Nanvix<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Nanvix<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>Nanvix.<sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NANVIX_SYSCALL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NANVIX_SYSCALL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;<ref refid="const_8h" kindref="compound">nanvix/const.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;sys/times.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;sys/utsname.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;ustat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;utime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>system<sp/>calls.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_SYSCALLS<sp/>48</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>call<sp/>numbers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_alarm<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_brk<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_fork<sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_getegid<sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_geteuid<sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_getgid<sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_getgrp<sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_getpid<sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_getppid<sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_getuid<sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_kill<sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_nice<sp/><sp/><sp/><sp/><sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_pause<sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_setegid<sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_seteuid<sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_setgid<sp/><sp/><sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_setpgrp<sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_setuid<sp/><sp/><sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR__exit<sp/><sp/><sp/><sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_wait<sp/><sp/><sp/><sp/><sp/>19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_signal<sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_access<sp/><sp/><sp/>21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_chdir<sp/><sp/><sp/><sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_chown<sp/><sp/><sp/><sp/>23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_chroot<sp/><sp/><sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_chmod<sp/><sp/><sp/><sp/>25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_open<sp/><sp/><sp/><sp/><sp/>26</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_umask<sp/><sp/><sp/><sp/>27</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_read<sp/><sp/><sp/><sp/><sp/>28</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_write<sp/><sp/><sp/><sp/>29</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_close<sp/><sp/><sp/><sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_execve<sp/><sp/><sp/>31</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_lseek<sp/><sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_pipe<sp/><sp/><sp/><sp/><sp/>33</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_stat<sp/><sp/><sp/><sp/><sp/>34</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_fcntl<sp/><sp/><sp/><sp/>35</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_sync<sp/><sp/><sp/><sp/><sp/>36</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_unlink<sp/><sp/><sp/>37</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_dup2<sp/><sp/><sp/><sp/><sp/>38</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_ioctl<sp/><sp/><sp/><sp/>39</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_link<sp/><sp/><sp/><sp/><sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_uname<sp/><sp/><sp/><sp/>41</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_utime<sp/><sp/><sp/><sp/>42</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_ustat<sp/><sp/><sp/><sp/>43</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_times<sp/><sp/><sp/><sp/>44</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_shutdown<sp/>45</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_ps<sp/><sp/><sp/><sp/><sp/><sp/><sp/>46</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_gticks<sp/><sp/><sp/>47</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_semget<sp/><sp/><sp/>48</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_semctl<sp/><sp/><sp/>49</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NR_semop<sp/><sp/><sp/><sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_ASM_FILE_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>calls<sp/>prototypes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>sys_alarm(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>seconds);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_brk(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sys__exit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/>pid_t<sp/>sys_fork(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/>pid_t<sp/>sys_getpgrp(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/>pid_t<sp/>sys_getpid(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/>pid_t<sp/>sys_getppid(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/>pid_t<sp/>sys_getuid(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_kill(pid_t<sp/>pid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_nice(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>incr);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sys_pause(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_seteuid(uid_t<sp/>uid);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_setgid(gid_t<sp/>uid);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/>sighandler_t<sp/>sys_signal(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>sighandler_t<sp/>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/>pid_t<sp/>sys_setpgrp(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_setuid(pid_t<sp/>uid);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/>pid_t<sp/>sys_wait(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*stat_loc);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Duplicates<sp/>a<sp/>file<sp/>descriptor.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_dup2(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldfd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newfd);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Performs<sp/>control<sp/>operations<sp/>on<sp/>a<sp/>device.</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_ioctl(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>cmd,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>arg);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Checks<sp/>user<sp/>permissions<sp/>for<sp/>a<sp/>file.</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_access(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amode);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Changes<sp/>working<sp/>directory.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_chdir(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Changes<sp/>permissions<sp/>of<sp/>a<sp/>file.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_chmod(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/>mode_t<sp/>mode);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Changes<sp/>owner<sp/>and<sp/>group<sp/>of<sp/>a<sp/>file.</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_chown(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/>uid_t<sp/>owner,<sp/>gid_t<sp/>group);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Changes<sp/>working<sp/>directory.</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_chroot(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Closes<sp/>a<sp/>file.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_close(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Executes<sp/>a<sp/>program.</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_execve(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**envp);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Manipulates<sp/>file<sp/>descriptor.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_fcntl(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Gets<sp/>the<sp/>effective<sp/>user<sp/>group<sp/>ID<sp/>of<sp/>the<sp/>calling<sp/>process.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/>gid_t<sp/>sys_getegid(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>Gets<sp/>the<sp/>effective<sp/>user<sp/>ID<sp/>of<sp/>the<sp/>calling<sp/>process.</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/>uid_t<sp/>sys_geteuid(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Gets<sp/>the<sp/>real<sp/>user<sp/>group<sp/>ID<sp/>of<sp/>the<sp/>calling<sp/>process.</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/>gid_t<sp/>sys_getgid(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Links<sp/>a<sp/>name<sp/>to<sp/>a<sp/>file.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_link(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path2);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Moves<sp/>the<sp/>read/write<sp/>file<sp/>offset.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/>off_t<sp/>sys_lseek(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>off_t<sp/>offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whence);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Opens<sp/>a<sp/>file.</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_open(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oflag,<sp/>mode_t<sp/>mode);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Creates<sp/>an<sp/>interprocess<sp/>channel.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_pipe(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fildes[2]);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Reads<sp/>from<sp/>a<sp/>file.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/>ssize_t<sp/>sys_read(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Sets<sp/>the<sp/>effective<sp/>user<sp/>group<sp/>ID<sp/>of<sp/>the<sp/>calling<sp/>process.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_setegid(gid_t<sp/>gid);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Gets<sp/>file<sp/>status.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_stat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat<sp/>*buf);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Schedules<sp/>file<sp/>system<sp/>updates.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sys_sync(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Gets<sp/>process<sp/>and<sp/>waited-for<sp/>child<sp/>process<sp/>times.</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/>clock_t<sp/>sys_times(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtms" kindref="compound">tms</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Sets<sp/>and<sp/>gets<sp/>the<sp/>file<sp/>mode<sp/>creation<sp/>mask.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/>mode_t<sp/>sys_umask(mode_t<sp/>cmask);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Gets<sp/>the<sp/>name<sp/>of<sp/>the<sp/>current<sp/>system.</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_uname(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>utsname<sp/>*name);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Removes<sp/>a<sp/>directory<sp/>entry.</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_unlink(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Gets<sp/>file<sp/>system<sp/>statistics.</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_ustat(dev_t<sp/>dev,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ustat<sp/>*ubuf);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>file<sp/>access<sp/>and<sp/>modification<sp/>times</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_utime(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>utimbuf<sp/>*times);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Writes<sp/>to<sp/>a<sp/>file.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/>ssize_t<sp/>sys_write(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_shutdown(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Gets<sp/>process<sp/>information</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_ps(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Clear<sp/>the<sp/>screen</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_clear(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Get<sp/>system<sp/>ticks<sp/>since<sp/>initialization</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTERN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_gticks(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_ASM_FILE_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>NANVIX_SYSCALL_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/nanvix/syscall.h"/>
  </compounddef>
</doxygen>
