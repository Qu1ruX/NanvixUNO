<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stdint_8h" kind="file" language="C++">
    <compoundname>stdint.h</compoundname>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="stdint_8h_1accbd6432732c88ad6adc5365800433b6" prot="public" static="no">
        <type>__INT8_TYPE__</type>
        <definition>typedef __INT8_TYPE__ int8_t</definition>
        <argsstring></argsstring>
        <name>int8_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stdint.h" line="26" column="1" bodyfile="include/stdint.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1afe270aee8d96ad7f279a4020b9d58bdf" prot="public" static="no">
        <type>__INT16_TYPE__</type>
        <definition>typedef __INT16_TYPE__ int16_t</definition>
        <argsstring></argsstring>
        <name>int16_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stdint.h" line="27" column="1" bodyfile="include/stdint.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" prot="public" static="no">
        <type>__INT32_TYPE__</type>
        <definition>typedef __INT32_TYPE__ int32_t</definition>
        <argsstring></argsstring>
        <name>int32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stdint.h" line="28" column="1" bodyfile="include/stdint.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" prot="public" static="no">
        <type>__INT64_TYPE__</type>
        <definition>typedef __INT64_TYPE__ int64_t</definition>
        <argsstring></argsstring>
        <name>int64_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stdint.h" line="29" column="1" bodyfile="include/stdint.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" prot="public" static="no">
        <type>__UINT8_TYPE__</type>
        <definition>typedef __UINT8_TYPE__ uint8_t</definition>
        <argsstring></argsstring>
        <name>uint8_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stdint.h" line="32" column="1" bodyfile="include/stdint.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" prot="public" static="no">
        <type>__UINT16_TYPE__</type>
        <definition>typedef __UINT16_TYPE__ uint16_t</definition>
        <argsstring></argsstring>
        <name>uint16_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stdint.h" line="33" column="1" bodyfile="include/stdint.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" prot="public" static="no">
        <type>__UINT32_TYPE__</type>
        <definition>typedef __UINT32_TYPE__ uint32_t</definition>
        <argsstring></argsstring>
        <name>uint32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stdint.h" line="34" column="1" bodyfile="include/stdint.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" prot="public" static="no">
        <type>__UINT64_TYPE__</type>
        <definition>typedef __UINT64_TYPE__ uint64_t</definition>
        <argsstring></argsstring>
        <name>uint64_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stdint.h" line="35" column="1" bodyfile="include/stdint.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright(C)<sp/>2011-2016<sp/>Pedro<sp/>H.<sp/>Penna<sp/>&lt;pedrohenriquepenna@gmail.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Nanvix.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Nanvix<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Nanvix<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>Nanvix.<sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STDINT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STDINT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_ASM_FILE_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Signed<sp/>integers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__INT8_TYPE__<sp/>int8_t;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>8-bit<sp/>integer.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__INT16_TYPE__<sp/>int16_t;<sp/></highlight><highlight class="comment">/*<sp/>16-bit<sp/>integer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__INT32_TYPE__<sp/>int32_t;<sp/></highlight><highlight class="comment">/*<sp/>32-bit<sp/>integer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__INT64_TYPE__<sp/>int64_t;<sp/></highlight><highlight class="comment">/*<sp/>64-bit<sp/>integer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unsigned<sp/>integers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__UINT8_TYPE__<sp/>uint8_t;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>8-bit<sp/>integer.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__UINT16_TYPE__<sp/>uint16_t;<sp/></highlight><highlight class="comment">/*<sp/>16-bit<sp/>integer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__UINT32_TYPE__<sp/>uint32_t;<sp/></highlight><highlight class="comment">/*<sp/>32-bit<sp/>integer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__UINT64_TYPE__<sp/>uint64_t;<sp/></highlight><highlight class="comment">/*<sp/>64-bit<sp/>integer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_ASM_FILE_*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STDINT_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/stdint.h"/>
  </compounddef>
</doxygen>
